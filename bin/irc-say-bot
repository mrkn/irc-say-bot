#! /usr/bin/env ruby
# coding: utf-8

require 'rubygems'
require 'net/irc'
require 'MeCab'
require 'csv'
require 'yaml'

DICT_PATH = File.join(File.dirname(__FILE__), '..', 'jsay', 'dic.csv')
DICT = CSV.open(DICT_PATH, 'r').inject({}) {|hash, row|
  hash[row[0]] = row[1]; next hash }.freeze

# see http://d.hatena.ne.jp/hitode909/20080124/1201144244
def jsay(message)
  $stderr.puts(message)
  m1 = MeCab::Tagger.new('-Owakati')
  m2 = MeCab::Tagger.new('-Oyomi')
  $stderr.puts(m1.inspect)
  $stderr.puts(m2.inspect)
  output = m2.parse(m1.parse(message)).force_encoding('UTF-8')
  $stderr.puts "->#{output}"

  DICT.each do |key, value|
    output.gsub!(key, value)
  end

  $stderr.puts "->#{output}"
  system("say", output)
end

class SayBot < Net::IRC::Client
  def on_rpl_welcome(m)
    post JOIN, opts.channel
  end

  def on_privmsg(m)
    channel, message = *m
    if message =~ /^say:\s+/
      message = $'
      post PRIVMSG, channel, "%s: say %s!" % [m.prefix.nick, message]
      jsay(message)
    end
  end
end

settings =
  if File.exist?('.saybotrc')
    YAML.load(IO.read('.saybotrc'))
  elsif File.exist?(File.expand_path('~/.saybotrc'))
    YAML.load(IO.read(File.expand_path('~/.saybotrc')))
  else
    $stderr.puts ".saybotrc is not found"
    exit 1
  end

client = SayBot.new(settings["server"],
                    settings["port"],
                    { :nick => settings["nick"],
                      :user => settings["user"],
                      :real => settings["real"],
                      :channel => settings["channel"] })
trap(:INT) {
  client.stop
  exit
}
client.start

# vim:filetype=ruby:fileencoding=utf-8:
